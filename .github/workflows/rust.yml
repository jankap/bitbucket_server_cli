name: Rust

on:
  push:
    paths:
      - '**/Cargo.toml'
      - 'Cargo.lock'
      - '**/*.rs'
      - '.github/workflows/*.yml'
      - 'integration_test/**'
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, nightly, beta]
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ runner.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --examples --lib --bins
      - name: Test
        run: cargo test --verbose --examples --lib --bins
  integration-test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              target
            key: ${{ runner.os }}-${{ runner.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: "Run integration test"
        run: integration_test/run_integration_test.sh
  clippy:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              target
            key: cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install clippy
        run: rustup component add clippy
      - name: Run clippy
        run: cargo clippy --all-targets -- --deny clippy::all
  fmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              target
            key: ${{ runner.os }}-${{ runner.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Run rustfmt
        run: cargo fmt -- --check
